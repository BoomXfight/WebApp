{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ContactService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.baseURL = \"http://localhost:8080/api/v1/contacts\";\n  }\n  getContactList() {\n    return this.httpClient.get(`${this.baseURL}`);\n  }\n  createContact(contact) {\n    return this.httpClient.post(`${this.baseURL}`, contact);\n  }\n}\nContactService.ɵfac = function ContactService_Factory(t) {\n  return new (t || ContactService)(i0.ɵɵinject(i1.HttpClient));\n};\nContactService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ContactService,\n  factory: ContactService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["ContactService","constructor","httpClient","baseURL","getContactList","get","createContact","contact","post","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/home/beckaand/Desktop/Programming/Java/Task1/frontend/angular-frontend/src/app/contact.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient} from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { Contact } from \"./contact\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContactService {\n\n  private baseURL= \"http://localhost:8080/api/v1/contacts\";\n  constructor(private httpClient: HttpClient) { }\n\n  getContactList(): Observable<Contact[]> {\n    return this.httpClient.get<Contact[]>(`${this.baseURL}`);\n  }\n\n  createContact(contact: Contact): Observable<Object>{\n    return this.httpClient.post(`${this.baseURL}`, contact);\n  }\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,cAAc;EAGzBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IADtB,KAAAC,OAAO,GAAE,uCAAuC;EACV;EAE9CC,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACF,UAAU,CAACG,GAAG,CAAY,GAAG,IAAI,CAACF,OAAO,EAAE,CAAC;EAC1D;EAEAG,aAAaA,CAACC,OAAgB;IAC5B,OAAO,IAAI,CAACL,UAAU,CAACM,IAAI,CAAC,GAAG,IAAI,CAACL,OAAO,EAAE,EAAEI,OAAO,CAAC;EACzD;;AAXWP,cAAc,C;mBAAdA,cAAc,EAAAS,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAdZ,cAAc,C;SAAdA,cAAc;EAAAa,OAAA,EAAdb,cAAc,CAAAc,IAAA;EAAAC,UAAA,EAFb;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}