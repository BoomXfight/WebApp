{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../contact.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction ContactListComponent_tr_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\");\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"td\")(16, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function ContactListComponent_tr_22_Template_button_click_16_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const contact_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.updateContact(contact_r1.id));\n    });\n    i0.ɵɵtext(17, \"Update\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const contact_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", contact_r1.id, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", contact_r1.firstName, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", contact_r1.lastName, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", contact_r1.email, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", contact_r1.age, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", contact_r1.phoneNumber, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", contact_r1.address, \" \");\n  }\n}\nexport class ContactListComponent {\n  constructor(contactService, router) {\n    this.contactService = contactService;\n    this.router = router;\n    this.contacts = [];\n  }\n  getContacts() {\n    this.contactService.getContactList().subscribe(data => {\n      this.contacts = data;\n    });\n  }\n  ngOnInit() {\n    this.getContacts();\n  }\n  updateContact(id) {\n    this.router.navigate(['update-contact', id]);\n  }\n}\nContactListComponent.ɵfac = function ContactListComponent_Factory(t) {\n  return new (t || ContactListComponent)(i0.ɵɵdirectiveInject(i1.ContactService), i0.ɵɵdirectiveInject(i2.Router));\n};\nContactListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ContactListComponent,\n  selectors: [[\"app-contact-list\"]],\n  decls: 23,\n  vars: 1,\n  consts: [[1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-info\", 3, \"click\"]],\n  template: function ContactListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \"Contact List\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"table\", 0)(3, \"thead\")(4, \"tr\")(5, \"th\");\n      i0.ɵɵtext(6, \"ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"th\");\n      i0.ɵɵtext(8, \"First name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"th\");\n      i0.ɵɵtext(10, \"Last name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"th\");\n      i0.ɵɵtext(12, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"th\");\n      i0.ɵɵtext(14, \"Age\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"th\");\n      i0.ɵɵtext(16, \"Phone number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"th\");\n      i0.ɵɵtext(18, \"Address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"th\");\n      i0.ɵɵtext(20, \"Actions\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(21, \"tbody\");\n      i0.ɵɵtemplate(22, ContactListComponent_tr_22_Template, 18, 7, \"tr\", 1);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(22);\n      i0.ɵɵproperty(\"ngForOf\", ctx.contacts);\n    }\n  },\n  dependencies: [i3.NgForOf],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ContactListComponent_tr_22_Template_button_click_16_listener","restoredCtx","ɵɵrestoreView","_r3","contact_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","updateContact","id","ɵɵadvance","ɵɵtextInterpolate1","firstName","lastName","email","age","phoneNumber","address","ContactListComponent","constructor","contactService","router","contacts","getContacts","getContactList","subscribe","data","ngOnInit","navigate","ɵɵdirectiveInject","i1","ContactService","i2","Router","selectors","decls","vars","consts","template","ContactListComponent_Template","rf","ctx","ɵɵtemplate","ContactListComponent_tr_22_Template","ɵɵproperty"],"sources":["/home/beckaand/Desktop/Programming/Java/Task1/frontend/angular-frontend/src/app/contact-list/contact-list.component.ts","/home/beckaand/Desktop/Programming/Java/Task1/frontend/angular-frontend/src/app/contact-list/contact-list.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Contact } from '../contact'\nimport { ContactService } from \"../contact.service\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-contact-list',\n  templateUrl: './contact-list.component.html',\n  styleUrls: ['./contact-list.component.css']\n})\nexport class ContactListComponent {\n\n  contacts: Contact[] = [];\n\n  constructor(private contactService: ContactService, private router: Router) { }\n\n  private getContacts(){\n    this.contactService.getContactList().subscribe(data =>{\n      this.contacts = data;\n    })\n  }\n\n  ngOnInit() : void {\n    this.getContacts();\n  }\n\n  updateContact(id: number){\n    this.router.navigate(['update-contact', id]);\n  }\n\n}\n","<h2>Contact List</h2>\n<table class=\"table table-striped\">\n    <thead>\n        <tr>\n            <th>ID</th>\n            <th>First name</th>\n            <th>Last name</th>\n            <th>Email</th>\n            <th>Age</th>\n            <th>Phone number</th>\n            <th>Address</th>\n            <th>Actions</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let contact of contacts\">\n            <td> {{contact.id}} </td>\n            <td> {{contact.firstName}} </td>\n            <td> {{contact.lastName}} </td>\n            <td> {{contact.email}} </td>\n            <td> {{contact.age}} </td>\n            <td> {{contact.phoneNumber}} </td>\n            <td> {{contact.address}} </td>\n            <td>\n                <button (click)=\"updateContact(contact.id)\" class=\"btn btn-info\">Update</button>\n            </td>\n        </tr>\n    </tbody>\n</table>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}